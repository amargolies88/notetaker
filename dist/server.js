const express=require("express"),compression=require("compression"),path=require("path"),fs=require("fs"),app=express(),PORT=process.env.PORT||8808;app.use(express.urlencoded({extended:!0})),app.use(express.json()),app.use(express.static("public")),app.use(compression({filter:shouldCompress})),app.get("/api/notes",(a,b)=>{fs.readFile(path.join(__dirname,"/db/db.json"),"utf8",function(a,c){return a?console.log(a):void b.json(JSON.parse(c))})}),app.post("/api/notes",function(a,b){let c=a.body,d=[];fs.readFile(path.join(__dirname,"/db/db.json"),(a,e)=>{if(a)throw a;if(d=JSON.parse(e),1>d.length)c.id=1;else for(let a=1;a<d.length+2;a++){for(let b=0;b<d.length&&a!==d[b].id;b++)b==d.length-1&&(c.id=a);if(c.id)break}d.push(c);let f=JSON.stringify(d);fs.writeFile(path.join(__dirname,"/db/db.json"),f,a=>{if(a)throw a;b.send(c)})})}),app.delete("/api/notes/:id",(a,b)=>{let c=parseInt(a.params.id),d=[];fs.readFile(path.join(__dirname,"/db/db.json"),(a,e)=>{if(a)throw a;d=JSON.parse(e),d=d.filter(a=>a.id!==c),jsonNotes=JSON.stringify(d),fs.writeFile(path.join(__dirname,"/db/db.json"),jsonNotes,a=>{if(a)throw a;b.end()})})}),app.get("/notes",function(a,b){b.sendFile(path.join(__dirname,"/public/notes.html"))}),app.get("*",function(a,b){b.sendFile(path.join(__dirname,"/public/index.html"))}),app.get("/",function(a,b){b.sendFile(path.join(__dirname,"/public/index.html"))}),app.listen(PORT,function(){console.log("Listening on PORT "+PORT)});